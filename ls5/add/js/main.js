// - Дано натуральное число n. Выведите все числа от 1 до n.
let testArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
let i = 1;
let fooRec = (n) => {
    console.log(i);
    i++;
    if (i > n) {
        return;
    }
    fooRec(n);
};

fooRec(9);

let foo1 = (n) => {
    let i = 1;
    if (n > 1) {
        while (i <= n) {
            console.log(i);
            i++;
        }
    }
};

foo1(9)

// - Даны два целых числа A и В . Выведите все числа от A до B включительно, в порядке возрастания, если A < B, или в порядке убывания в противном случае.

let foo2 = (a, b) => {
    if (a > b) {
        while (a >= b) {
            console.log(a);
            a--;
        }
    } else if (a < b) {
        while (a <= b) {
            console.log(a);
            a++;
        }
    }
}

foo2(15, 10);
foo2(10, 15);

// -   функція Приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
//   EXAMPLE:
//   foo([9,8,0,4], 0) // ==> [ 8, 9, 0, 4 ]
//   foo([9,8,0,4], 1) // ==> [ 9 ,0, 8, 4 ]
//   foo([9,8,0,4], 2) // ==> [ 9, 8, 4, 0 ]

let foo3 = (arr, i) => {
    let n = arr[i];
    arr[i] = arr[i + 1];
    arr[i + 1] = n;
    console.log(arr);
};

foo3([9, 8, 0, 4], 0);
foo3([9, 8, 0, 4], 1);
foo3([9, 8, 0, 4], 2);

// - Сворити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при цьому порядок не нульових значень.
// Двожина масиву від 2 до 100
// EXAMPLE:
// [1,0,6,0,3] => [1,6,3,0,0]
// [0,1,2,3,4] => [1,2,3,4,0]
// [0,0,1,0]   => [1,0,0,0]

let foo4 = (arr) => {
    let i = 0;
    let x = [];
    let y = []
    while (i < arr.length) {
        if (arr[i] === 0) {
            x.push(0);
        } else {
            y.push(arr[i]);
        }
        i++;
    }
    arr = y.concat(x);
    console.log(arr);
}
foo4([1, 0, 6, 0, 3]);
foo4([0, 1, 2, 3, 4]);
foo4([0, 0, 1, 0]);